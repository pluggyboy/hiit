/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Csrc%5C%5Ccomponents%5C%5CServiceWorkerRegistration.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Csrc%5C%5Ccomponents%5C%5CServiceWorkerRegistration.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/google/target.css?{\"path\":\"src\\\\app\\\\layout.tsx\",\"import\":\"Geist\",\"arguments\":[{\"variable\":\"--font-geist-sans\",\"subsets\":[\"latin\"]}],\"variableName\":\"geistSans\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src\\\\\\\\app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Geist\\\",\\\"arguments\\\":[{\\\"variable\\\":\\\"--font-geist-sans\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"geistSans\\\"}\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/google/target.css?{\"path\":\"src\\\\app\\\\layout.tsx\",\"import\":\"Geist_Mono\",\"arguments\":[{\"variable\":\"--font-geist-mono\",\"subsets\":[\"latin\"]}],\"variableName\":\"geistMono\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src\\\\\\\\app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Geist_Mono\\\",\\\"arguments\\\":[{\\\"variable\\\":\\\"--font-geist-mono\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"geistMono\\\"}\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/globals.css */ \"(app-pages-browser)/./src/app/globals.css\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/ServiceWorkerRegistration.tsx */ \"(app-pages-browser)/./src/components/ServiceWorkerRegistration.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDZGF2ZSU1QyU1Q1Byb2plY3RzJTVDJTVDaGlpdCU1QyU1Q25leHRqcy1oaWl0LWFwcCU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNmb250JTVDJTVDZ29vZ2xlJTVDJTVDdGFyZ2V0LmNzcyUzRiU3QiU1QyUyMnBhdGglNUMlMjIlM0ElNUMlMjJzcmMlNUMlNUMlNUMlNUNhcHAlNUMlNUMlNUMlNUNsYXlvdXQudHN4JTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIyR2Vpc3QlNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJ2YXJpYWJsZSU1QyUyMiUzQSU1QyUyMi0tZm9udC1nZWlzdC1zYW5zJTVDJTIyJTJDJTVDJTIyc3Vic2V0cyU1QyUyMiUzQSU1QiU1QyUyMmxhdGluJTVDJTIyJTVEJTdEJTVEJTJDJTVDJTIydmFyaWFibGVOYW1lJTVDJTIyJTNBJTVDJTIyZ2Vpc3RTYW5zJTVDJTIyJTdEJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2RhdmUlNUMlNUNQcm9qZWN0cyU1QyU1Q2hpaXQlNUMlNUNuZXh0anMtaGlpdC1hcHAlNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZm9udCU1QyU1Q2dvb2dsZSU1QyU1Q3RhcmdldC5jc3MlM0YlN0IlNUMlMjJwYXRoJTVDJTIyJTNBJTVDJTIyc3JjJTVDJTVDJTVDJTVDYXBwJTVDJTVDJTVDJTVDbGF5b3V0LnRzeCU1QyUyMiUyQyU1QyUyMmltcG9ydCU1QyUyMiUzQSU1QyUyMkdlaXN0X01vbm8lNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJ2YXJpYWJsZSU1QyUyMiUzQSU1QyUyMi0tZm9udC1nZWlzdC1tb25vJTVDJTIyJTJDJTVDJTIyc3Vic2V0cyU1QyUyMiUzQSU1QiU1QyUyMmxhdGluJTVDJTIyJTVEJTdEJTVEJTJDJTVDJTIydmFyaWFibGVOYW1lJTVDJTIyJTNBJTVDJTIyZ2Vpc3RNb25vJTVDJTIyJTdEJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkMlM0ElNUMlNUNVc2VycyU1QyU1Q2RhdmUlNUMlNUNQcm9qZWN0cyU1QyU1Q2hpaXQlNUMlNUNuZXh0anMtaGlpdC1hcHAlNUMlNUNzcmMlNUMlNUNhcHAlNUMlNUNnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNkYXZlJTVDJTVDUHJvamVjdHMlNUMlNUNoaWl0JTVDJTVDbmV4dGpzLWhpaXQtYXBwJTVDJTVDc3JjJTVDJTVDY29tcG9uZW50cyU1QyU1Q1NlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24udHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyZGVmYXVsdCUyMiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLDRnQkFBNFM7QUFDNVM7QUFDQSxzaEJBQWlUO0FBQ2pUO0FBQ0Esb0tBQTRHO0FBQzVHO0FBQ0Esc05BQWtLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxkYXZlXFxcXFByb2plY3RzXFxcXGhpaXRcXFxcbmV4dGpzLWhpaXQtYXBwXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGZvbnRcXFxcZ29vZ2xlXFxcXHRhcmdldC5jc3M/e1xcXCJwYXRoXFxcIjpcXFwic3JjXFxcXFxcXFxhcHBcXFxcXFxcXGxheW91dC50c3hcXFwiLFxcXCJpbXBvcnRcXFwiOlxcXCJHZWlzdFxcXCIsXFxcImFyZ3VtZW50c1xcXCI6W3tcXFwidmFyaWFibGVcXFwiOlxcXCItLWZvbnQtZ2Vpc3Qtc2Fuc1xcXCIsXFxcInN1YnNldHNcXFwiOltcXFwibGF0aW5cXFwiXX1dLFxcXCJ2YXJpYWJsZU5hbWVcXFwiOlxcXCJnZWlzdFNhbnNcXFwifVwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcZGF2ZVxcXFxQcm9qZWN0c1xcXFxoaWl0XFxcXG5leHRqcy1oaWl0LWFwcFxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxmb250XFxcXGdvb2dsZVxcXFx0YXJnZXQuY3NzP3tcXFwicGF0aFxcXCI6XFxcInNyY1xcXFxcXFxcYXBwXFxcXFxcXFxsYXlvdXQudHN4XFxcIixcXFwiaW1wb3J0XFxcIjpcXFwiR2Vpc3RfTW9ub1xcXCIsXFxcImFyZ3VtZW50c1xcXCI6W3tcXFwidmFyaWFibGVcXFwiOlxcXCItLWZvbnQtZ2Vpc3QtbW9ub1xcXCIsXFxcInN1YnNldHNcXFwiOltcXFwibGF0aW5cXFwiXX1dLFxcXCJ2YXJpYWJsZU5hbWVcXFwiOlxcXCJnZWlzdE1vbm9cXFwifVwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcZGF2ZVxcXFxQcm9qZWN0c1xcXFxoaWl0XFxcXG5leHRqcy1oaWl0LWFwcFxcXFxzcmNcXFxcYXBwXFxcXGdsb2JhbHMuY3NzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJkZWZhdWx0XCJdICovIFwiQzpcXFxcVXNlcnNcXFxcZGF2ZVxcXFxQcm9qZWN0c1xcXFxoaWl0XFxcXG5leHRqcy1oaWl0LWFwcFxcXFxzcmNcXFxcY29tcG9uZW50c1xcXFxTZXJ2aWNlV29ya2VyUmVnaXN0cmF0aW9uLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Cdave%5C%5CProjects%5C%5Chiit%5C%5Cnextjs-hiit-app%5C%5Csrc%5C%5Ccomponents%5C%5CServiceWorkerRegistration.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"5491eaeb370d\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGRhdmVcXFByb2plY3RzXFxoaWl0XFxuZXh0anMtaGlpdC1hcHBcXHNyY1xcYXBwXFxnbG9iYWxzLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjU0OTFlYWViMzcwZFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/ServiceWorkerRegistration.tsx":
/*!******************************************************!*\
  !*** ./src/components/ServiceWorkerRegistration.tsx ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_serviceWorker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/serviceWorker */ \"(app-pages-browser)/./src/utils/serviceWorker.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\n\nconst ServiceWorkerRegistration = ()=>{\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"ServiceWorkerRegistration.useEffect\": ()=>{\n            // Register service worker after component mounts (client-side only)\n            (0,_utils_serviceWorker__WEBPACK_IMPORTED_MODULE_1__.registerServiceWorker)();\n        }\n    }[\"ServiceWorkerRegistration.useEffect\"], []);\n    // This is a utility component that doesn't render anything\n    return null;\n};\n_s(ServiceWorkerRegistration, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ServiceWorkerRegistration;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ServiceWorkerRegistration);\nvar _c;\n$RefreshReg$(_c, \"ServiceWorkerRegistration\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1NlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRWtDO0FBQzRCO0FBRTlELE1BQU1FLDRCQUE0Qjs7SUFDaENGLGdEQUFTQTsrQ0FBQztZQUNSLG9FQUFvRTtZQUNwRUMsMkVBQXFCQTtRQUN2Qjs4Q0FBRyxFQUFFO0lBRUwsMkRBQTJEO0lBQzNELE9BQU87QUFDVDtHQVJNQztLQUFBQTtBQVVOLGlFQUFlQSx5QkFBeUJBLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZGF2ZVxcUHJvamVjdHNcXGhpaXRcXG5leHRqcy1oaWl0LWFwcFxcc3JjXFxjb21wb25lbnRzXFxTZXJ2aWNlV29ya2VyUmVnaXN0cmF0aW9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcclxuXHJcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgcmVnaXN0ZXJTZXJ2aWNlV29ya2VyIH0gZnJvbSAnQC91dGlscy9zZXJ2aWNlV29ya2VyJztcclxuXHJcbmNvbnN0IFNlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24gPSAoKSA9PiB7XHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIC8vIFJlZ2lzdGVyIHNlcnZpY2Ugd29ya2VyIGFmdGVyIGNvbXBvbmVudCBtb3VudHMgKGNsaWVudC1zaWRlIG9ubHkpXHJcbiAgICByZWdpc3RlclNlcnZpY2VXb3JrZXIoKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIC8vIFRoaXMgaXMgYSB1dGlsaXR5IGNvbXBvbmVudCB0aGF0IGRvZXNuJ3QgcmVuZGVyIGFueXRoaW5nXHJcbiAgcmV0dXJuIG51bGw7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTZXJ2aWNlV29ya2VyUmVnaXN0cmF0aW9uO1xyXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwicmVnaXN0ZXJTZXJ2aWNlV29ya2VyIiwiU2VydmljZVdvcmtlclJlZ2lzdHJhdGlvbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ServiceWorkerRegistration.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/utils/serviceWorker.ts":
/*!************************************!*\
  !*** ./src/utils/serviceWorker.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPushSupported: () => (/* binding */ isPushSupported),\n/* harmony export */   registerServiceWorker: () => (/* binding */ registerServiceWorker),\n/* harmony export */   subscribeToPushNotifications: () => (/* binding */ subscribeToPushNotifications),\n/* harmony export */   urlBase64ToUint8Array: () => (/* binding */ urlBase64ToUint8Array)\n/* harmony export */ });\n// Service worker registration utility\nfunction registerServiceWorker() {\n    if ( true && 'serviceWorker' in navigator) {\n        window.addEventListener('load', ()=>{\n            navigator.serviceWorker.register('/sw.js').then((registration)=>{\n                console.log('Service Worker registered with scope:', registration.scope);\n                return registration;\n            }).catch((error)=>{\n                console.error('Service Worker registration failed:', error);\n            });\n        });\n    }\n}\n// Check if Push API is supported\nfunction isPushSupported() {\n    return  true && 'serviceWorker' in navigator && 'PushManager' in window;\n}\n// Request push notification permission and subscribe\nasync function subscribeToPushNotifications() {\n    if (!isPushSupported()) {\n        return false;\n    }\n    try {\n        // Request permission\n        const permission = await Notification.requestPermission();\n        if (permission !== 'granted') {\n            return false;\n        }\n        // Get service worker registration\n        const registration = await navigator.serviceWorker.ready;\n        // Subscribe to push notifications\n        // In a real app, this would include a backend server that would generate VAPID keys\n        // and handle sending push notifications\n        const subscription = await registration.pushManager.subscribe({\n            userVisibleOnly: true\n        });\n        console.log('Push notification subscription:', subscription);\n        // In a real app, you would send the subscription to your server\n        // await sendSubscriptionToServer(subscription);\n        return true;\n    } catch (error) {\n        console.error('Error subscribing to push notifications:', error);\n        return false;\n    }\n}\n// Helper function to convert base64 string to Uint8Array\n// This would be used with actual VAPID keys in a real application\nfunction urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for(let i = 0; i < rawData.length; ++i){\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9zZXJ2aWNlV29ya2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzQ0FBc0M7QUFFL0IsU0FBU0E7SUFDZCxJQUFJLEtBQTZCLElBQUksbUJBQW1CQyxXQUFXO1FBQ2pFQyxPQUFPQyxnQkFBZ0IsQ0FBQyxRQUFRO1lBQzlCRixVQUFVRyxhQUFhLENBQ3BCQyxRQUFRLENBQUMsVUFDVEMsSUFBSSxDQUFDLENBQUNDO2dCQUNMQyxRQUFRQyxHQUFHLENBQUMseUNBQXlDRixhQUFhRyxLQUFLO2dCQUN2RSxPQUFPSDtZQUNULEdBQ0NJLEtBQUssQ0FBQyxDQUFDQztnQkFDTkosUUFBUUksS0FBSyxDQUFDLHVDQUF1Q0E7WUFDdkQ7UUFDSjtJQUNGO0FBQ0Y7QUFFQSxpQ0FBaUM7QUFDMUIsU0FBU0M7SUFDZCxPQUNFLEtBQTZCLElBQzdCLG1CQUFtQlosYUFDbkIsaUJBQWlCQztBQUVyQjtBQUVBLHFEQUFxRDtBQUM5QyxlQUFlWTtJQUNwQixJQUFJLENBQUNELG1CQUFtQjtRQUN0QixPQUFPO0lBQ1Q7SUFFQSxJQUFJO1FBQ0YscUJBQXFCO1FBQ3JCLE1BQU1FLGFBQWEsTUFBTUMsYUFBYUMsaUJBQWlCO1FBQ3ZELElBQUlGLGVBQWUsV0FBVztZQUM1QixPQUFPO1FBQ1Q7UUFFQSxrQ0FBa0M7UUFDbEMsTUFBTVIsZUFBZSxNQUFNTixVQUFVRyxhQUFhLENBQUNjLEtBQUs7UUFFeEQsa0NBQWtDO1FBQ2xDLG9GQUFvRjtRQUNwRix3Q0FBd0M7UUFDeEMsTUFBTUMsZUFBZSxNQUFNWixhQUFhYSxXQUFXLENBQUNDLFNBQVMsQ0FBQztZQUM1REMsaUJBQWlCO1FBR25CO1FBRUFkLFFBQVFDLEdBQUcsQ0FBQyxtQ0FBbUNVO1FBRS9DLGdFQUFnRTtRQUNoRSxnREFBZ0Q7UUFFaEQsT0FBTztJQUNULEVBQUUsT0FBT1AsT0FBTztRQUNkSixRQUFRSSxLQUFLLENBQUMsNENBQTRDQTtRQUMxRCxPQUFPO0lBQ1Q7QUFDRjtBQUVBLHlEQUF5RDtBQUN6RCxrRUFBa0U7QUFDM0QsU0FBU1csc0JBQXNCQyxZQUFvQjtJQUN4RCxNQUFNQyxVQUFVLElBQUlDLE1BQU0sQ0FBQyxDQUFDLElBQUtGLGFBQWFHLE1BQU0sR0FBRyxDQUFDLElBQUs7SUFDN0QsTUFBTUMsU0FBUyxDQUFDSixlQUFlQyxPQUFNLEVBQ2xDSSxPQUFPLENBQUMsTUFBTSxLQUNkQSxPQUFPLENBQUMsTUFBTTtJQUVqQixNQUFNQyxVQUFVNUIsT0FBTzZCLElBQUksQ0FBQ0g7SUFDNUIsTUFBTUksY0FBYyxJQUFJQyxXQUFXSCxRQUFRSCxNQUFNO0lBRWpELElBQUssSUFBSU8sSUFBSSxHQUFHQSxJQUFJSixRQUFRSCxNQUFNLEVBQUUsRUFBRU8sRUFBRztRQUN2Q0YsV0FBVyxDQUFDRSxFQUFFLEdBQUdKLFFBQVFLLFVBQVUsQ0FBQ0Q7SUFDdEM7SUFFQSxPQUFPRjtBQUNUIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGRhdmVcXFByb2plY3RzXFxoaWl0XFxuZXh0anMtaGlpdC1hcHBcXHNyY1xcdXRpbHNcXHNlcnZpY2VXb3JrZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2VydmljZSB3b3JrZXIgcmVnaXN0cmF0aW9uIHV0aWxpdHlcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlclNlcnZpY2VXb3JrZXIoKSB7XHJcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IpIHtcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xyXG4gICAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlclxyXG4gICAgICAgIC5yZWdpc3RlcignL3N3LmpzJylcclxuICAgICAgICAudGhlbigocmVnaXN0cmF0aW9uKSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnU2VydmljZSBXb3JrZXIgcmVnaXN0ZXJlZCB3aXRoIHNjb3BlOicsIHJlZ2lzdHJhdGlvbi5zY29wZSk7XHJcbiAgICAgICAgICByZXR1cm4gcmVnaXN0cmF0aW9uO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcignU2VydmljZSBXb3JrZXIgcmVnaXN0cmF0aW9uIGZhaWxlZDonLCBlcnJvcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbi8vIENoZWNrIGlmIFB1c2ggQVBJIGlzIHN1cHBvcnRlZFxyXG5leHBvcnQgZnVuY3Rpb24gaXNQdXNoU3VwcG9ydGVkKCkge1xyXG4gIHJldHVybiAoXHJcbiAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxyXG4gICAgJ3NlcnZpY2VXb3JrZXInIGluIG5hdmlnYXRvciAmJlxyXG4gICAgJ1B1c2hNYW5hZ2VyJyBpbiB3aW5kb3dcclxuICApO1xyXG59XHJcblxyXG4vLyBSZXF1ZXN0IHB1c2ggbm90aWZpY2F0aW9uIHBlcm1pc3Npb24gYW5kIHN1YnNjcmliZVxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc3Vic2NyaWJlVG9QdXNoTm90aWZpY2F0aW9ucygpIHtcclxuICBpZiAoIWlzUHVzaFN1cHBvcnRlZCgpKSB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgLy8gUmVxdWVzdCBwZXJtaXNzaW9uXHJcbiAgICBjb25zdCBwZXJtaXNzaW9uID0gYXdhaXQgTm90aWZpY2F0aW9uLnJlcXVlc3RQZXJtaXNzaW9uKCk7XHJcbiAgICBpZiAocGVybWlzc2lvbiAhPT0gJ2dyYW50ZWQnKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBHZXQgc2VydmljZSB3b3JrZXIgcmVnaXN0cmF0aW9uXHJcbiAgICBjb25zdCByZWdpc3RyYXRpb24gPSBhd2FpdCBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWFkeTtcclxuICAgIFxyXG4gICAgLy8gU3Vic2NyaWJlIHRvIHB1c2ggbm90aWZpY2F0aW9uc1xyXG4gICAgLy8gSW4gYSByZWFsIGFwcCwgdGhpcyB3b3VsZCBpbmNsdWRlIGEgYmFja2VuZCBzZXJ2ZXIgdGhhdCB3b3VsZCBnZW5lcmF0ZSBWQVBJRCBrZXlzXHJcbiAgICAvLyBhbmQgaGFuZGxlIHNlbmRpbmcgcHVzaCBub3RpZmljYXRpb25zXHJcbiAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBhd2FpdCByZWdpc3RyYXRpb24ucHVzaE1hbmFnZXIuc3Vic2NyaWJlKHtcclxuICAgICAgdXNlclZpc2libGVPbmx5OiB0cnVlLFxyXG4gICAgICAvLyBJbiBhIHJlYWwgYXBwbGljYXRpb24sIHlvdSB3b3VsZCBpbmNsdWRlIGFwcGxpY2F0aW9uIHNlcnZlciBrZXlzIGhlcmVcclxuICAgICAgLy8gYXBwbGljYXRpb25TZXJ2ZXJLZXk6IHVybEJhc2U2NFRvVWludDhBcnJheSgneW91cl9wdWJsaWNfa2V5X2hlcmUnKVxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ1B1c2ggbm90aWZpY2F0aW9uIHN1YnNjcmlwdGlvbjonLCBzdWJzY3JpcHRpb24pO1xyXG4gICAgXHJcbiAgICAvLyBJbiBhIHJlYWwgYXBwLCB5b3Ugd291bGQgc2VuZCB0aGUgc3Vic2NyaXB0aW9uIHRvIHlvdXIgc2VydmVyXHJcbiAgICAvLyBhd2FpdCBzZW5kU3Vic2NyaXB0aW9uVG9TZXJ2ZXIoc3Vic2NyaXB0aW9uKTtcclxuICAgIFxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN1YnNjcmliaW5nIHRvIHB1c2ggbm90aWZpY2F0aW9uczonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBiYXNlNjQgc3RyaW5nIHRvIFVpbnQ4QXJyYXlcclxuLy8gVGhpcyB3b3VsZCBiZSB1c2VkIHdpdGggYWN0dWFsIFZBUElEIGtleXMgaW4gYSByZWFsIGFwcGxpY2F0aW9uXHJcbmV4cG9ydCBmdW5jdGlvbiB1cmxCYXNlNjRUb1VpbnQ4QXJyYXkoYmFzZTY0U3RyaW5nOiBzdHJpbmcpIHtcclxuICBjb25zdCBwYWRkaW5nID0gJz0nLnJlcGVhdCgoNCAtIChiYXNlNjRTdHJpbmcubGVuZ3RoICUgNCkpICUgNCk7XHJcbiAgY29uc3QgYmFzZTY0ID0gKGJhc2U2NFN0cmluZyArIHBhZGRpbmcpXHJcbiAgICAucmVwbGFjZSgvLS9nLCAnKycpXHJcbiAgICAucmVwbGFjZSgvXy9nLCAnLycpO1xyXG5cclxuICBjb25zdCByYXdEYXRhID0gd2luZG93LmF0b2IoYmFzZTY0KTtcclxuICBjb25zdCBvdXRwdXRBcnJheSA9IG5ldyBVaW50OEFycmF5KHJhd0RhdGEubGVuZ3RoKTtcclxuXHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByYXdEYXRhLmxlbmd0aDsgKytpKSB7XHJcbiAgICBvdXRwdXRBcnJheVtpXSA9IHJhd0RhdGEuY2hhckNvZGVBdChpKTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIG91dHB1dEFycmF5O1xyXG59XHJcbiJdLCJuYW1lcyI6WyJyZWdpc3RlclNlcnZpY2VXb3JrZXIiLCJuYXZpZ2F0b3IiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwic2VydmljZVdvcmtlciIsInJlZ2lzdGVyIiwidGhlbiIsInJlZ2lzdHJhdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJzY29wZSIsImNhdGNoIiwiZXJyb3IiLCJpc1B1c2hTdXBwb3J0ZWQiLCJzdWJzY3JpYmVUb1B1c2hOb3RpZmljYXRpb25zIiwicGVybWlzc2lvbiIsIk5vdGlmaWNhdGlvbiIsInJlcXVlc3RQZXJtaXNzaW9uIiwicmVhZHkiLCJzdWJzY3JpcHRpb24iLCJwdXNoTWFuYWdlciIsInN1YnNjcmliZSIsInVzZXJWaXNpYmxlT25seSIsInVybEJhc2U2NFRvVWludDhBcnJheSIsImJhc2U2NFN0cmluZyIsInBhZGRpbmciLCJyZXBlYXQiLCJsZW5ndGgiLCJiYXNlNjQiLCJyZXBsYWNlIiwicmF3RGF0YSIsImF0b2IiLCJvdXRwdXRBcnJheSIsIlVpbnQ4QXJyYXkiLCJpIiwiY2hhckNvZGVBdCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/serviceWorker.ts\n"));

/***/ })

});